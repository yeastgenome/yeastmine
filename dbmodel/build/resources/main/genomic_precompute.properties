# Bag upload queries
precompute.query.1 = SELECT a1_.id as a3_, a2_.value as a4_ FROM org.intermine.model.bio.BioEntity AS a1_, org.intermine.model.bio.Synonym AS a2_ WHERE a1_.synonyms CONTAINS a2_
 	
precompute.query.3 = SELECT a1_.id AS a3_, a2_.value AS a4_, a5_.shortName as a6_ FROM org.intermine.model.bio.BioEntity AS a1_, org.intermine.model.bio.Synonym AS a2_, org.intermine.model.bio.Organism AS a5_ WHERE (a1_.synonyms CONTAINS a2_ AND a1_.organism CONTAINS a5_)
# gene/protein --> organism [used by some widgets]
precompute.query.5 = SELECT a1_.id as a3_, a2_.name AS a4_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Organism AS a2_ WHERE a1_.organism CONTAINS a2_

precompute.query.6 = SELECT a1_.id AS a3_, a2_.name AS a4_ FROM org.intermine.model.bio.Protein AS a1_, org.intermine.model.bio.Organism AS a2_ WHERE a1_.organism CONTAINS a2_

# chromosome distribution widget
precompute.query.7 = SELECT a2_.id as a4_, a1_.primaryIdentifier AS a5_, a2_.primaryIdentifier AS a6_,  a3_.name as a7_ FROM org.intermine.model.bio.Chromosome AS a1_, org.intermine.model.bio.SequenceFeature AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE (a2_.chromosome CONTAINS a1_ AND a2_.organism CONTAINS a3_)	
precompute.query.8 = SELECT a3_.primaryIdentifier AS a1_, a4_.primaryIdentifier AS a2_, a4_.id as a6_, a5_.name as a7_ FROM org.intermine.model.bio.Chromosome AS a3_, org.intermine.model.bio.SequenceFeature AS a4_, org.intermine.model.bio.Organism AS a5_ WHERE (a4_.chromosome CONTAINS a3_ AND a4_.organism CONTAINS a5_)	
precompute.query.9 = SELECT a5_.name AS a1_, a3_.primaryIdentifier AS a6_, COUNT(*) AS a2_ FROM org.intermine.model.bio.Chromosome AS a3_, org.intermine.model.bio.SequenceFeature AS a4_, org.intermine.model.bio.Organism AS a5_ WHERE (a4_.chromosome CONTAINS a3_ AND a4_.organism CONTAINS a5_) GROUP BY a5_.name, a3_.primaryIdentifier

# Publications widget
precompute.query.18 = SELECT a1_.id as a6_, a2_.pubMedId AS a4_, a2_.title AS a5_, a3_.name as a7_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Publication AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE (a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_)

precompute.query.19 = SELECT a3_.name AS organismname, COUNT(*) AS a4_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Publication AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_ GROUP BY a3_.name

precompute.query.20 = SELECT a1_.id AS a4_, a3_.name AS a5_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Publication AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_

precompute.query.21 = SELECT a1_.id AS a4_, a3_.name AS a5_, a2_.pubMedId AS a6_, a2_.title AS a7_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Publication AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_

precompute.query.22 = SELECT a1_.id AS a4_, a3_.name AS a5_ FROM Gene AS a1_, Publication AS a2_, Organism AS a3_ WHERE a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_

# GO enrichment queries
precompute.query.23 = SELECT a1_.id AS a3_, a2_.id AS a4_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Organism AS a2_ WHERE (a1_.organism CONTAINS a2_)


# GO stats widget
precompute.query.28 = SELECT DISTINCT a4_.namespace AS a7_, a3_.taxonId AS a8_, a1_.id AS a9_, a4_.identifier AS a10_, a4_.name AS a11_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.GOAnnotation AS a2_, org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.OntologyTerm AS a4_, org.intermine.model.bio.OntologyTerm AS a5_, org.intermine.model.bio.OntologyRelation AS a6_ WHERE a1_.goAnnotation CONTAINS a2_ AND LOWER(a4_.identifier) != 'GO:0008150' AND LOWER(a4_.identifier) != 'GO:0003674' AND LOWER(a4_.identifier) != 'GO:0005575' AND a2_.ontologyTerm CONTAINS a5_ AND a5_.relations CONTAINS a6_ AND a6_.parentTerm CONTAINS a4_ AND a6_.childTerm CONTAINS a5_ AND a2_.qualifier IS NULL AND a1_.organism CONTAINS a3_

# genomic region search
precompute.query.30 = SELECT a3_.shortName AS a1_, a4_.class AS a2_ FROM org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.SequenceFeature AS a4_ WHERE a4_.organism CONTAINS a3_

precompute.query.31 = SELECT a4_.class AS a1_, a5_.name AS a2_, a5_.description AS a3_ FROM org.intermine.model.bio.SequenceFeature AS a4_, org.intermine.model.bio.SOTerm AS a5_ WHERE a4_.sequenceOntologyTerm CONTAINS a5_


precompute.constructquery.01 = Gene synonyms Synonym
precompute.constructquery.02 = Synonym subject Gene
precompute.constructquery.03 = BioEntity synonyms Synonym
precompute.constructquery.04 = Synonym subject BioEntity

precompute.constructquery.05 = Gene crossReferences CrossReference
precompute.constructquery.06 = CrossReference subject Gene
precompute.constructquery.07 = BioEntity crossReferences CrossReference
precompute.constructquery.08 = CrossReference subject BioEntity

precompute.constructquery.18 = BioEntity organism Organism
precompute.constructquery.19 = Gene organism Organism
precompute.constructquery.20 = Protein organism Organism
precompute.constructquery.22 = Chromosome organism Organism


precompute.constructquery.28 = Gene goAnnotation GOAnnotation ontologyTerm OntologyTerm
precompute.constructquery.29 = Protein genes Gene goAnnotation GOAnnotation ontologyTerm OntologyTerm

precompute.constructquery.30 = Gene homologues Homologue homologue Gene
precompute.constructquery.31 = Gene homologues Homologue homologue Gene organism Organism
precompute.constructquery.32 = Protein genes Gene homologues Homologue homologue Gene
precompute.constructquery.33 = Gene homologues Homologue homologue Gene proteins Protein
precompute.constructquery.34 = Protein genes Gene homologues Homologue homologue Gene proteins Protein

precompute.constructquery.35 = Gene proteins Protein
precompute.constructquery.36 = Protein genes Gene

precompute.constructquery.38 = Gene overlappingFeatures IntergenicRegion
precompute.constructquery.39 = IntergenicRegion overlappingFeatures Gene

precompute.constructquery.40 = Gene interactions Interaction participant2 Gene
precompute.constructquery.41 = Interaction participant2 Gene
precompute.constructquery.42 = Gene interactions Interaction
precompute.constructquery.43 = Interaction details InteractionDetail experiment InteractionExperiment

precompute.constructquery.44 = Gene regulatoryRegions RegulatoryRegion

